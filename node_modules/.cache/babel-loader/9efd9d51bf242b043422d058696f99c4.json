{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Personal/bill-management-react/src/Views/common/Chart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { connect } from \"react-redux\";\n\nfunction CustomChart(props) {\n  const [bill, setBills] = useState([]);\n  const condition = Boolean(Math.round(Math.random()));\n  console.log(\"ChartList\", JSON.stringify(props.billList));\n  useEffect(() => {\n    let list = [];\n    props.billList.forEach(item => {\n      let tempDate = item.date.split(\"-\");\n      list.push({\n        x: Date.UTC(tempDate[2], tempDate[1], tempDate[0]),\n        y: parseInt(item.amount)\n      });\n    });\n    setBills(list);\n  }, []);\n  const options = {\n    series: [{\n      data: bill\n    }],\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: {\n        day: condition ? \"%e-%b-%y\" : \"%e%b%y\",\n        month: condition ? \"%b-%y\" : \"%b '%y\"\n      }\n    }\n  }; // const options = {\n  //   series: [\n  //     {\n  //       data: [\n  //         { x: Date.UTC(2019, 15, 13), y: 25 },\n  //         { x: Date.UTC(2019, 16, 11), y: 35 },\n  //         { x: Date.UTC(2019, 17, 11), y: 40 },\n  //         { x: Date.UTC(2019, 18, 11), y: 20 },\n  //         { x: Date.UTC(2019, 19, 11), y: 15 },\n  //       ],\n  //     },\n  //   ],\n  //   xAxis: {\n  //     type: \"datetime\",\n  //     dateTimeLabelFormats: {\n  //       day: condition ? \"%e-%b-%y\" : \"%e%b%y\",\n  //       month: condition ? \"%b-%y\" : \"%b '%y\",\n  //     },\n  //   },\n  // };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst mapStateToProps = ({\n  dashboardReducer\n}) => {\n  const {\n    billList\n  } = dashboardReducer;\n  return {\n    billList\n  };\n};\n\nexport default connect(mapStateToProps, {})(CustomChart);","map":{"version":3,"sources":["/Users/apple/Desktop/Personal/bill-management-react/src/Views/common/Chart.js"],"names":["React","useState","useEffect","Highcharts","HighchartsReact","connect","CustomChart","props","bill","setBills","condition","Boolean","Math","round","random","console","log","JSON","stringify","billList","list","forEach","item","tempDate","date","split","push","x","Date","UTC","y","parseInt","amount","options","series","data","xAxis","type","dateTimeLabelFormats","day","month","mapStateToProps","dashboardReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMS,SAAS,GAAGC,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAD,CAAzB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,IAAI,CAACC,SAAL,CAAeX,KAAK,CAACY,QAArB,CAAzB;AAEAjB,EAAAA,SAAS,CAAC,MAAK;AACb,QAAIkB,IAAI,GAAE,EAAV;AACAb,IAAAA,KAAK,CAACY,QAAN,CAAeE,OAAf,CAAwBC,IAAD,IAAU;AAC/B,UAAIC,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,CAAf;AACAL,MAAAA,IAAI,CAACM,IAAL,CAAW;AAAEC,QAAAA,CAAC,EAAEC,IAAI,CAACC,GAAL,CAASN,QAAQ,CAAC,CAAD,CAAjB,EAAsBA,QAAQ,CAAC,CAAD,CAA9B,EAAmCA,QAAQ,CAAC,CAAD,CAA3C,CAAL;AAAsDO,QAAAA,CAAC,EAAEC,QAAQ,CAACT,IAAI,CAACU,MAAN;AAAjE,OAAX;AACD,KAHD;AAIAvB,IAAAA,QAAQ,CAACW,IAAD,CAAR;AACD,GAPQ,EAOP,EAPO,CAAT;AASA,QAAMa,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAE3B;AADR,KADM,CADM;AAMd4B,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,UADD;AAELC,MAAAA,oBAAoB,EAAE;AACpBC,QAAAA,GAAG,EAAE7B,SAAS,GAAG,UAAH,GAAgB,QADV;AAEpB8B,QAAAA,KAAK,EAAE9B,SAAS,GAAG,OAAH,GAAa;AAFT;AAFjB;AANO,GAAhB,CAf0B,CA6B1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAEP,UAA7B;AAAyC,IAAA,OAAO,EAAE8B,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AACD,MAAMQ,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAChD,QAAM;AAAEvB,IAAAA;AAAF,MAAeuB,gBAArB;AACA,SAAO;AAAEvB,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAed,OAAO,CAACoC,eAAD,EAAkB,EAAlB,CAAP,CAA6BnC,WAA7B,CAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { connect } from \"react-redux\";\n\nfunction CustomChart(props) {\n  const [bill, setBills] = useState([]);\n  const condition = Boolean(Math.round(Math.random()));\n\n  console.log(\"ChartList\", JSON.stringify(props.billList));\n\n  useEffect(() =>{\n    let list =[];\n    props.billList.forEach((item) => {\n      let tempDate = item.date.split(\"-\")\n      list.push( { x: Date.UTC(tempDate[2], tempDate[1], tempDate[0]), y: parseInt(item.amount) });\n    });\n    setBills(list);\n  },[])\n\n  const options = {\n    series: [\n      {\n        data: bill,\n      },\n    ],\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: {\n        day: condition ? \"%e-%b-%y\" : \"%e%b%y\",\n        month: condition ? \"%b-%y\" : \"%b '%y\",\n      },\n    },\n  };\n  // const options = {\n  //   series: [\n  //     {\n  //       data: [\n  //         { x: Date.UTC(2019, 15, 13), y: 25 },\n  //         { x: Date.UTC(2019, 16, 11), y: 35 },\n  //         { x: Date.UTC(2019, 17, 11), y: 40 },\n  //         { x: Date.UTC(2019, 18, 11), y: 20 },\n  //         { x: Date.UTC(2019, 19, 11), y: 15 },\n  //       ],\n  //     },\n  //   ],\n  //   xAxis: {\n  //     type: \"datetime\",\n  //     dateTimeLabelFormats: {\n  //       day: condition ? \"%e-%b-%y\" : \"%e%b%y\",\n  //       month: condition ? \"%b-%y\" : \"%b '%y\",\n  //     },\n  //   },\n  // };\n\n  return (\n    <div>\n      {}\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </div>\n  );\n}\nconst mapStateToProps = ({ dashboardReducer }) => {\n  const { billList } = dashboardReducer;\n  return { billList };\n};\n\nexport default connect(mapStateToProps, {})(CustomChart);\n"]},"metadata":{},"sourceType":"module"}