{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Personal/bill-management-react/src/Views/common/Chart.js\";\nimport React, { Component, useState, useEffect, useCallback } from 'react';\nimport Plot from 'react-plotly.js';\nimport { Chart } from 'react-charts';\n\nfunction MyChart() {\n  const data = React.useMemo(() => [{\n    label: 'Series 1',\n    data: [{\n      x: \"15-11-2019\",\n      y: 25\n    }, {\n      x: \"16-11-2019\",\n      y: 35\n    }, {\n      x: \"17-11-2019\",\n      y: 40\n    }, {\n      x: \"18-11-2019\",\n      y: 20\n    }, {\n      x: \"19-11-2019\",\n      y: 15\n    }]\n  }], []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: 'linear',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  const options = React.useMemo(() => [{\n    scales: {\n      xAxes: [{\n        type: 'time',\n        time: {\n          unit: 'day'\n        }\n      }]\n    }\n  }], []);\n  return (\n    /*#__PURE__*/\n    // A react-chart hyper-responsively and continuusly fills the available\n    // space of its parent element automatically\n    React.createElement(\"div\", {\n      style: {\n        width: '600px',\n        height: '500px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: data,\n      axes: axes,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }))\n  );\n}\n\nexport default MyChart;","map":{"version":3,"sources":["/Users/apple/Desktop/Personal/bill-management-react/src/Views/common/Chart.js"],"names":["React","Component","useState","useEffect","useCallback","Plot","Chart","MyChart","data","useMemo","label","x","y","axes","primary","type","position","options","scales","xAxes","time","unit","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,WAAhD,QAAkE,OAAlE;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,SAASC,OAAT,GAAmB;AACf,QAAMC,IAAI,GAAGR,KAAK,CAACS,OAAN,CACT,MAAM,CACF;AACIC,IAAAA,KAAK,EAAE,UADX;AAEIF,IAAAA,IAAI,EAAE,CAAC;AAACG,MAAAA,CAAC,EAAC,YAAH;AAAiBC,MAAAA,CAAC,EAAE;AAApB,KAAD,EAA0B;AAACD,MAAAA,CAAC,EAAC,YAAH;AAAiBC,MAAAA,CAAC,EAAE;AAApB,KAA1B,EAAmD;AAACD,MAAAA,CAAC,EAAC,YAAH;AAAgBC,MAAAA,CAAC,EAAC;AAAlB,KAAnD,EAA0E;AAACD,MAAAA,CAAC,EAAC,YAAH;AAAiBC,MAAAA,CAAC,EAAC;AAAnB,KAA1E,EAAkG;AAACD,MAAAA,CAAC,EAAC,YAAH;AAAiBC,MAAAA,CAAC,EAAC;AAAnB,KAAlG;AAFV,GADE,CADG,EAMT,EANS,CAAb;AASA,QAAMC,IAAI,GAAGb,KAAK,CAACS,OAAN,CACT,MAAM,CACF;AAAEK,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,IAAI,EAAE,QAAvB;AAAiCC,IAAAA,QAAQ,EAAE;AAA3C,GADE,EAEF;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFE,CADG,EAKT,EALS,CAAb;AAQA,QAAMC,OAAO,GAAGjB,KAAK,CAACS,OAAN,CACZ,MAAM,CACF;AACJS,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CAAC;AACJJ,QAAAA,IAAI,EAAE,MADF;AAEJK,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE;AADJ;AAFF,OAAD;AADH;AADJ,GADE,CADM,EAaZ,EAbY,CAAhB;AAgBA;AAAA;AACI;AACA;AACA;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,OADJ;AAEHC,QAAAA,MAAM,EAAE;AAFL,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEf,IAAb;AAAmB,MAAA,IAAI,EAAEK,IAAzB;AAA+B,MAAA,OAAO,EAAEI,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ;AAHJ;AAYH;;AAED,eAAeV,OAAf","sourcesContent":["import React, {Component,  useState, useEffect, useCallback} from 'react';\nimport Plot from 'react-plotly.js';\nimport { Chart } from 'react-charts'\n\nfunction MyChart() {\n    const data = React.useMemo(\n        () => [\n            {\n                label: 'Series 1',\n                data: [{x:\"15-11-2019\", y: 25}, {x:\"16-11-2019\", y: 35}, {x:\"17-11-2019\",y:40}, {x:\"18-11-2019\", y:20}, {x:\"19-11-2019\", y:15}]\n            }],\n        []\n    )\n\n    const axes = React.useMemo(\n        () => [\n            { primary: true, type: 'linear', position: 'bottom' },\n            { type: 'linear', position: 'left' },\n        ],\n        []\n    )\n\n    const options = React.useMemo(\n        () => [\n            {\n        scales: {\n            xAxes: [{\n                type: 'time',\n                time: {\n                    unit: 'day'\n                }\n            }]\n        }\n    }\n        ],\n        []\n    )\n\n    return (\n        // A react-chart hyper-responsively and continuusly fills the available\n        // space of its parent element automatically\n        <div\n            style={{\n                width: '600px',\n                height: '500px'\n            }}\n        >\n            <Chart data={data} axes={axes} options={options}/>\n        </div>\n    )\n}\n\nexport default MyChart;"]},"metadata":{},"sourceType":"module"}