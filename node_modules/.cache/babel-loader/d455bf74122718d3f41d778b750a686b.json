{"ast":null,"code":"import AxiosApiInstance from \"./Api\";\n/**\n * \n * @param {*} endPoint \n * @param {*} service \n * @param {*} headers \n */\n\nexport function callGetAPI(endPoint, service, headers) {\n  return new Promise((resolve, reject) => {\n    AxiosApiInstance(endPoint, headers).get(service).then(response => {\n      if (response.status === 200) {\n        resolve(response.data);\n      }\n    }).catch(error => {\n      if (error && error.response) {\n        reject(error.response.data);\n      }\n    });\n  });\n}\n/**\n * \n * @param {*} endPoint \n * @param {*} service \n * @param {*} requestPayload \n * @param {*} headers \n */\n\nexport function callPostAPI(endPoint, service, requestPayload, headers) {\n  return new Promise((resolve, reject) => {\n    AxiosApiInstance(endPoint, headers).post(service, requestPayload).then(response => {\n      if (response.status === 200) {\n        resolve(response.data);\n      }\n    }).catch(error => {\n      // ToDo: Improve error handling once we have more clarity for apis\n      if (error && error.response) {\n        console.log(\"Error received in API\");\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/Users/apple/Desktop/Personal/bill-management-react/src/networkLayer/ApiService.js"],"names":["AxiosApiInstance","callGetAPI","endPoint","service","headers","Promise","resolve","reject","get","then","response","status","data","catch","error","callPostAPI","requestPayload","post","console","log"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,OAA7B;AAEA;;;;;;;AAMA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgD;AACrD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,IAAAA,gBAAgB,CAACE,QAAD,EAAWE,OAAX,CAAhB,CACGI,GADH,CACOL,OADP,EAEGM,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BL,QAAAA,OAAO,CAACI,QAAQ,CAACE,IAAV,CAAP;AACD;AACF,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChB,UAAIA,KAAK,IAAIA,KAAK,CAACJ,QAAnB,EAA6B;AAC3BH,QAAAA,MAAM,CAACO,KAAK,CAACJ,QAAN,CAAeE,IAAhB,CAAN;AACD;AACF,KAXH;AAYD,GAbM,CAAP;AAcD;AAED;;;;;;;;AAOA,OAAO,SAASG,WAAT,CACHb,QADG,EAEHC,OAFG,EAGHa,cAHG,EAIHZ,OAJG,EAKH;AACA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,IAAAA,gBAAgB,CAACE,QAAD,EAAWE,OAAX,CAAhB,CACGa,IADH,CACQd,OADR,EACiBa,cADjB,EAEGP,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBL,QAAAA,OAAO,CAACI,QAAQ,CAACE,IAAV,CAAP;AACH;AACF,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AACf;AACH,UAAIA,KAAK,IAAIA,KAAK,CAACJ,QAAnB,EAA6B;AACzBQ,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;AACF,KAZH;AAaD,GAdM,CAAP;AAeD","sourcesContent":["import AxiosApiInstance from \"./Api\";\n\n/**\n * \n * @param {*} endPoint \n * @param {*} service \n * @param {*} headers \n */\nexport function callGetAPI(endPoint, service, headers) {\n  return new Promise((resolve, reject) => {\n    AxiosApiInstance(endPoint, headers)\n      .get(service)\n      .then((response) => {\n        if (response.status === 200) {\n          resolve(response.data);\n        }\n      })\n      .catch((error) => {\n        if (error && error.response) {\n          reject(error.response.data);\n        }\n      });\n  });\n}\n\n/**\n * \n * @param {*} endPoint \n * @param {*} service \n * @param {*} requestPayload \n * @param {*} headers \n */\nexport function callPostAPI(\n    endPoint,\n    service,\n    requestPayload,\n    headers\n  ) {\n    return new Promise((resolve, reject) => {\n      AxiosApiInstance(endPoint, headers)\n        .post(service, requestPayload)\n        .then((response) => {\n          if (response.status === 200) {\n              resolve(response.data);\n          }\n        })\n        .catch((error) => {\n           // ToDo: Improve error handling once we have more clarity for apis\n        if (error && error.response) {\n            console.log(\"Error received in API\");\n          }\n        });\n    });\n  }\n"]},"metadata":{},"sourceType":"module"}