{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Personal/bill-management-react/src/Views/common/Chart.js\";\nimport React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { connect } from \"react-redux\";\n\nfunction CustomChart(props) {\n  const condition = Boolean(Math.round(Math.random()));\n  console.log(\"ChartList\", JSON.stringify(props.billList));\n  const options = {\n    series: [{\n      data: [{\n        x: Date.UTC(2019, 15, 13),\n        y: 25\n      }, {\n        x: Date.UTC(2019, 16, 11),\n        y: 35\n      }, {\n        x: Date.UTC(2019, 17, 11),\n        y: 40\n      }, {\n        x: Date.UTC(2019, 18, 11),\n        y: 20\n      }, {\n        x: Date.UTC(2019, 19, 11),\n        y: 15\n      }]\n    }],\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: {\n        day: condition ? \"%e-%b-%y\" : \"%e%b%y\",\n        month: condition ? \"%b-%y\" : \"%b '%y\"\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst mapStateToProps = ({\n  dashboardReducer\n}) => {\n  const {\n    billList\n  } = dashboardReducer;\n  return {\n    billList\n  };\n};\n\nexport default connect(mapStateToProps, {})(CustomChart);","map":{"version":3,"sources":["/Users/apple/Desktop/Personal/bill-management-react/src/Views/common/Chart.js"],"names":["React","Highcharts","HighchartsReact","connect","CustomChart","props","condition","Boolean","Math","round","random","console","log","JSON","stringify","billList","options","series","data","x","Date","UTC","y","xAxis","type","dateTimeLabelFormats","day","month","mapStateToProps","dashboardReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,SAAS,GAAGC,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAD,CAAzB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBC,IAAI,CAACC,SAAL,CAAeT,KAAK,CAACU,QAArB,CAAxB;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAE,CACJ;AAACC,QAAAA,CAAC,EAACC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAAH;AAA2BC,QAAAA,CAAC,EAAC;AAA7B,OADI,EAEJ;AAACH,QAAAA,CAAC,EAACC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAAH;AAA2BC,QAAAA,CAAC,EAAC;AAA7B,OAFI,EAGF;AAACH,QAAAA,CAAC,EAACC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAAH;AAA2BC,QAAAA,CAAC,EAAC;AAA7B,OAHE,EAIA;AAACH,QAAAA,CAAC,EAACC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAAH;AAA2BC,QAAAA,CAAC,EAAC;AAA7B,OAJA,EAKE;AAACH,QAAAA,CAAC,EAACC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAAH;AAA2BC,QAAAA,CAAC,EAAC;AAA7B,OALF;AADR,KADM,CADM;AAYdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,UADD;AAELC,MAAAA,oBAAoB,EAAE;AACpBC,QAAAA,GAAG,EAAEpB,SAAS,GAAG,UAAH,GAAgB,QADV;AAEpBqB,QAAAA,KAAK,EAAErB,SAAS,GAAG,OAAH,GAAa;AAFT;AAFjB;AAZO,GAAhB;AAqBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAEL,UAA7B;AAAyC,IAAA,OAAO,EAAEe,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AACD,MAAMY,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAChD,QAAM;AAAEd,IAAAA;AAAF,MAAec,gBAArB;AACA,SAAO;AAAEd,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeZ,OAAO,CAACyB,eAAD,EAAkB,EAAlB,CAAP,CACZxB,WADY,CAAf","sourcesContent":["import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { connect } from \"react-redux\";\n\nfunction CustomChart(props) {\n  const condition = Boolean(Math.round(Math.random()));\n\n  console.log(\"ChartList\",JSON.stringify(props.billList));\n  const options = {\n    series: [\n      {\n        data: [\n          {x:Date.UTC(2019, 15, 13), y:25},\n          {x:Date.UTC(2019, 16, 11), y:35},\n            {x:Date.UTC(2019, 17, 11), y:40},\n              {x:Date.UTC(2019, 18, 11), y:20},\n                {x:Date.UTC(2019, 19, 11), y:15},\n        ],\n      },\n    ],\n    xAxis: {\n      type: \"datetime\",\n      dateTimeLabelFormats: {\n        day: condition ? \"%e-%b-%y\" : \"%e%b%y\",\n        month: condition ? \"%b-%y\" : \"%b '%y\",\n      },\n    },\n  };\n\n  return (\n    <div>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </div>\n  );\n}\nconst mapStateToProps = ({ dashboardReducer }) => {\n  const { billList } = dashboardReducer;\n  return { billList };\n};\n\nexport default connect(mapStateToProps, {\n})(CustomChart);\n"]},"metadata":{},"sourceType":"module"}