{"ast":null,"code":"import * as DataService from \"../networkLayer/ApiService\";\nimport * as ActionType from \"./types\";\nimport { API_BASE_URL, BILL_SERVICES } from \"../networkLayer/ApiEndpoints\";\nimport { store } from \"../App\";\nexport const fetchBills = () => {\n  return async dispatch => {\n    try {\n      // Replace localhost with customer url once backend api is pushed to server\n      const endPoint = API_BASE_URL;\n      const path = BILL_SERVICES.FETCH_BILL_API;\n      let payload = {\n        bills: null\n      };\n      const response = await DataService.callGetAPI(endPoint, path);\n      console.log(\"Response received\", JSON.stringify(response));\n\n      if (response) {\n        payload.bills = response.bills;\n        dispatch({\n          type: ActionType.BILL_FETCH_SUCCESS,\n          payload: payload\n        });\n      }\n    } catch (err) {\n      console.log(\"Error received in API\", err);\n      let payload = {\n        errorMessage: err.message\n      };\n      dispatch({\n        type: ActionType.BILL_FETCH_FAIL,\n        payload: payload\n      });\n    }\n  };\n};\nexport const deleteBill = id => {\n  return async dispatch => {\n    try {\n      let payload = {\n        bills: []\n      };\n      let billList = store.getState().dashboardReducer.billList;\n      payload.bills = billList.filter(bill => {\n        return bill.id !== id;\n      });\n      dispatch({\n        type: ActionType.DELETE_BILL_SUCCESS,\n        payload: payload\n      });\n    } catch (err) {}\n  };\n};\nexport const addBill = () => {\n  return async dispatch => {\n    try {\n      let payload = {\n        bills: []\n      };\n      let billList = store.getState().dashboardReducer.billList;\n      console.log(\"Bill from store\", JSON.stringify(billList));\n      let dummyBillObject = {\n        \"id\": billList.length + 1,\n        \"description\": \"Filpkart\",\n        \"category\": \"shopping\",\n        \"amount\": \"101\",\n        \"date\": \"10-07-2020\"\n      };\n      billList.push(dummyBillObject);\n      console.log(\"After adding new bill\", JSON.stringify(billList));\n      dispatch({\n        type: ActionType.ADD_BILL_SUCCESS,\n        payload: payload\n      });\n    } catch (err) {}\n  };\n};","map":{"version":3,"sources":["/Users/apple/Desktop/Personal/bill-management-react/src/actions/DashboardAction.js"],"names":["DataService","ActionType","API_BASE_URL","BILL_SERVICES","store","fetchBills","dispatch","endPoint","path","FETCH_BILL_API","payload","bills","response","callGetAPI","console","log","JSON","stringify","type","BILL_FETCH_SUCCESS","err","errorMessage","message","BILL_FETCH_FAIL","deleteBill","id","billList","getState","dashboardReducer","filter","bill","DELETE_BILL_SUCCESS","addBill","dummyBillObject","length","push","ADD_BILL_SUCCESS"],"mappings":"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","sourcesContent":["import * as DataService from \"../networkLayer/ApiService\";\nimport * as ActionType from \"./types\";\nimport { API_BASE_URL, BILL_SERVICES } from \"../networkLayer/ApiEndpoints\";\nimport { store } from \"../App\";\n\nexport const fetchBills = () => {\n  return async (dispatch) => {\n    try {\n      // Replace localhost with customer url once backend api is pushed to server\n      const endPoint = API_BASE_URL;\n      const path = BILL_SERVICES.FETCH_BILL_API;\n      let payload = {\n        bills: null,\n      };\n      const response = await DataService.callGetAPI(endPoint, path);\n      console.log(\"Response received\", JSON.stringify(response));\n      if (response) {\n        payload.bills = response.bills;\n        dispatch({\n          type: ActionType.BILL_FETCH_SUCCESS,\n          payload: payload,\n        });\n      }\n    } catch (err) {\n      console.log(\"Error received in API\", err);\n      let payload = {\n        errorMessage: err.message,\n      };\n      dispatch({\n        type: ActionType.BILL_FETCH_FAIL,\n        payload: payload,\n      });\n    }\n  };\n};\n\nexport const deleteBill = (id) => {\n  return async (dispatch) => {\n    try {\n      let payload = {\n        bills: [],\n      };\n      let billList = store.getState().dashboardReducer.billList;\n\n      payload.bills = billList.filter((bill) => {\n        return bill.id !== id;\n      });\n\n      dispatch({\n        type: ActionType.DELETE_BILL_SUCCESS,\n        payload: payload,\n      });\n    } catch (err) {}\n  };\n};\n\nexport const addBill = () => {\n  return async (dispatch) => {\n    try {\n      let payload = {\n        bills: [],\n      };\n      let billList = store.getState().dashboardReducer.billList;\n\n      console.log(\"Bill from store\",JSON.stringify(billList));\n      let dummyBillObject = {\n        \"id\": billList.length + 1,\n        \"description\": \"Filpkart\",\n        \"category\": \"shopping\",\n        \"amount\": \"101\",\n        \"date\": \"10-07-2020\",\n      };\n      billList.push(dummyBillObject);\n\n      console.log(\"After adding new bill\",JSON.stringify(billList));\n\n      dispatch({\n        type: ActionType.ADD_BILL_SUCCESS,\n        payload: payload,\n      });\n    } catch (err) {}\n  };\n};\n"]},"metadata":{},"sourceType":"module"}